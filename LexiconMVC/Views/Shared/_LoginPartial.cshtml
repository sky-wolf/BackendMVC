@using Microsoft.AspNetCore.Identity
@using LexiconMVC.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject RoleManager<IdentityRole> RoleManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        @if (User.IsInRole("Admin"))
        {
            <li class="nav-item">
                <a class="nav-link disabled">Is Admin</a>
            </li>
        }
        else
        {
            <a asp-controller="Role" asp-action="AddUserToAdmin" class="btn btn-info" asp-route-id=@UserManager.GetUserId(User)>Admin</a>
        }
    <li class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
